[
  {
    "id": "failedToGetAbsPath",
    "translation": "获取绝对源码路径失败: {{.Error}}"
  },
  {
    "id": "goModNotFound",
    "translation": "无法找到 go.mod 来确定模块信息: {{.Error}}；请在有效的 Go 模块中运行此命令"
  },
  {
    "id": "serviceGenerationSuccess",
    "translation": "Service 和 controller 文件生成成功"
  },
  {
    "id": "gormModelGenerationStart",
    "translation": "开始生成 GORM 模型..."
  },
  {
    "id": "gormModelGenerationSuccess",
    "translation": "✅ GORM 模型生成成功"
  },
  {
    "id": "openAPIGenerationStart",
    "translation": "从以下位置生成 OpenAPI 规范: {{.Source}}"
  },
  {
    "id": "openAPIGenerationSuccess",
    "translation": "成功生成 OpenAPI 规范到 {{.Output}}"
  },
  {
    "id": "logicGenerationFailed",
    "translation": "生成 logic 文件失败: {{.Error}}"
  },
  {
    "id": "logicGenerationSuccess",
    "translation": "Logic 文件生成成功"
  },
  {
    "id": "newProjectCreationStart",
    "translation": "正在 './{{.ProjectName}}' 中创建新的 Maltose 项目..."
  },
  {
    "id": "newProjectTemplate",
    "translation": "使用模板: {{.RepoURL}}"
  },
  {
    "id": "newProjectCloneFailed",
    "translation": "克隆模板仓库失败: {{.Error}}"
  },
  {
    "id": "newProjectGitRemoveFailed",
    "translation": "移除 .git 目录失败: {{.Error}}"
  },
  {
    "id": "newProjectGoModReadFailed",
    "translation": "读取 go.mod 失败: {{.Error}}"
  },
  {
    "id": "newProjectGoModWriteFailed",
    "translation": "写入更新后的 go.mod 失败: {{.Error}}"
  },
  {
    "id": "newProjectSuccess",
    "translation": "项目 '{{.ProjectName}}' 创建成功"
  },
  {
    "id": "newProjectModulePathSet",
    "translation": "模块路径已设置为 '{{.ModulePath}}'"
  },
  {
    "id": "newProjectGetStarted",
    "translation": "\n开始使用:"
  },
  {
    "id": "newProjectGetStartedCD",
    "translation": "  cd {{.ProjectName}}"
  },
  {
    "id": "newProjectGetStartedTidy",
    "translation": "  go mod tidy"
  },
  {
    "id": "newProjectGetStartedRun",
    "translation": "  go run ."
  },
  {
    "id": "daoGenerationStart",
    "translation": "开始生成 DAO 层..."
  },
  {
    "id": "daoGenerationSuccess",
    "translation": "✅ DAO 层生成成功"
  },
  {
    "id": "genericError",
    "translation": "{{.Error}}"
  },
  {
    "id": "daoFilesGenerationStart",
    "translation": "H 正在生成 dao 文件..."
  },
  {
    "id": "generatingFile",
    "translation": "  -> 正在生成 {{.Path}}"
  },
  {
    "id": "skippingFile",
    "translation": "  -> 跳过 {{.Path}} (文件已存在)"
  },
  {
    "id": "entityFilesGenerationStart",
    "translation": "H 正在生成实体文件..."
  },
  {
    "id": "formatSourceFailed",
    "translation": "格式化源码失败: {{.Path}}, 将写入未格式化的代码。错误: {{.Error}}"
  },
  {
    "id": "envFileNotFound",
    "translation": "未找到 '.env' 文件。将为您创建一个 '.env.example'。"
  },
  {
    "id": "loadingEnvFile",
    "translation": "🔎 正在加载 .env 文件..."
  },
  {
    "id": "connectingToDatabase",
    "translation": "⚡ 正在连接数据库..."
  },
  {
    "id": "inspectingDatabase",
    "translation": "🔍 正在检查数据库结构..."
  },
  {
    "id": "foundTables",
    "translation": "✔ 已找到 {{.Count}} 个表。"
  },
  {
    "id": "scanningDirectory",
    "translation": "正在扫描目录: {{.Path}}"
  },
  {
    "id": "foundAPIDefinitions",
    "translation": "已找到 {{.Count}} 个 API 端点定义。"
  }
]
