name: 测试

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 保持多版本测试，但也可以根据需要精简为一个版本
        go-version: ["1.22", "1.23"]

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      apollo:
        image: apolloconfig/apollo-quick-start
        ports:
          - 8080:8080
          - 8070:8070
        options: >-
          --health-cmd "curl -f http://localhost:8070/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      nacos:
        image: nacos/nacos-server:v2.2.3
        ports:
          - 8848:8848
        env:
          PREFER_HOST_MODE: hostname
          MODE: standalone
        options: >-
          --health-cmd "curl -f http://localhost:8848/nacos/v1/ns/operator/metrics || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u root -proot"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Run tests
        env:
          APOLLO_IP: http://apollo:8080
          APOLLO_APP_ID: SampleApp
          APOLLO_CLUSTER: default
          NACOS_IP_ADDR: nacos
          NACOS_PORT: 8848
          DB_TYPE: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASS: root
          DB_NAME: testdb
        run: |
          go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.23'
        uses: codecov/codecov-action@v4
        with:
          files: coverage.out
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --verbose
