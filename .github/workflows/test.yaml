name: 测试

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.22", "1.23"]

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          TZ: Asia/Shanghai
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 5s
          --health-timeout 1s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Apollo Containers
        run: |
          docker compose -f ".github/workflows/apollo/docker-compose.yml" up -d --build

      - name: Start Nacos Containers
        run: |
          docker compose -f ".github/workflows/nacos/docker-compose.yml" up -d --build

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Wait for Apollo to be ready
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:8080; then
              echo "Apollo is up"
              break
            fi
            sleep 2
          done

      - name: Wait for Nacos to be ready
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:8848/nacos; then
              echo "Nacos is up"
              break
            fi
            sleep 2
          done

      - name: Run tests
        env:
          APOLLO_IP: http://localhost:8080
          APOLLO_APP_ID: SampleApp
          APOLLO_CLUSTER: default
          NACOS_IP_ADDR: localhost
          NACOS_PORT: 8848
          DB_TYPE: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASS: ""
          DB_NAME: testdb
        run: |
          go test -v -race -coverprofile=coverage.out ./...

      - name: Display coverage summary
        run: |
          go tool cover -func=coverage.out

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.23'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Stop Nacos Containers
        run: |
          docker compose -f ".github/workflows/nacos/docker-compose.yml" down

      - name: Stop Apollo Containers
        run: |
          docker compose -f ".github/workflows/apollo/docker-compose.yml" down

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --verbose
